3. Заголовок формы обратной связи
Цель: Убедиться, что заголовок формы обратной связи соответствует требованиям к верстке (шрифт, размер, цвет, расположение и т.д.).
Предусловия:
1.	На странице отображается форма обратной связи.
2.	Форма содержит заголовок.
Шаги:
•	3.1. Текст заголовка:
o	Описание: Проверить, что текст заголовка соответствует требованиям (например, “Связаться с нами”, “Обратная связь”).
o	Ожидаемый результат: Текст заголовка точно соответствует заданному тексту.
•	3.2. Шрифт:
o	Описание: Определить шрифт заголовка (название, размер, начертание, межбуквенный интервал, межстрочный интервал). Использовать инструменты разработчика браузера.
o	Ожидаемый результат:
	Название шрифта: [Указать название шрифта, например, Arial, sans-serif].
	Размер шрифта: [Указать размер шрифта, например, 24px].
	Начертание шрифта: [Указать начертание, например, bold, normal].
	Межбуквенный интервал: [Указать значение, например, 0.5px]
	Межстрочный интервал: [Указать значение, например, 1.2]
o	Примечание: Убедиться, что шрифт легко читается.
•	3.3. Цвет текста:
o	Описание: Определить цвет текста заголовка (использовать инструменты разработчика).
o	Ожидаемый результат: Цвет текста соответствует требованиям (например, #333333 - темно-серый).
•	3.4. Расположение:
o	Описание: Проверить расположение заголовка относительно формы обратной связи (например, сверху по центру, слева).
o	Ожидаемый результат:
	Горизонтальное выравнивание: [Указать выравнивание, например, center, left, right].
	Вертикальный отступ от верхнего края формы: [Указать отступ, например, 20px].
•	3.5. Тень (если есть):
o	Описание: Проверить наличие и параметры тени у заголовка (цвет, размытие, смещение).
o	Ожидаемый результат: [Описать параметры тени, если она есть, или указать, что тени нет].
•	3.6. Адаптивность:
o	Описание: Проверить, как заголовок отображается на разных разрешениях экрана (изменить размер окна браузера).
o	Ожидаемый результат:
	Размер шрифта может изменяться пропорционально размеру экрана.
	Расположение заголовка остается корректным.
	Заголовок не переносится на новую строку (если это не предусмотрено дизайном).
•	3.7 Доступность:
o	Описание: Проверить что заголовок семантический и находится в правильном теге, для лучшей читаемости скринридерами
o	Ожидаемый результат: Заголовок находится в тегах H1 или H2








4. Подзаголовок формы обратной связи
Цель: Убедиться, что подзаголовок формы обратной связи соответствует требованиям к верстке.
Предусловия:
1.	На странице отображается форма обратной связи.
2.	Форма содержит подзаголовок.
Шаги:
•	4.1. Текст подзаголовка:
o	Описание: Проверить, что текст подзаголовка соответствует требованиям (например, “Пожалуйста, заполните форму ниже, и мы свяжемся с вами в ближайшее время.”).
o	Ожидаемый результат: Текст подзаголовка точно соответствует заданному тексту.
•	4.2. Шрифт:
o	Описание: Определить шрифт подзаголовка (название, размер, начертание). Использовать инструменты разработчика браузера.
o	Ожидаемый результат:
	Название шрифта: [Указать название шрифта, например, Arial, sans-serif].
	Размер шрифта: [Указать размер шрифта, например, 14px].
	Начертание шрифта: [Указать начертание, например, normal].
•	4.3. Цвет текста:
o	Описание: Определить цвет текста подзаголовка.
o	Ожидаемый результат: Цвет текста соответствует требованиям (например, #666666 - серый).
•	4.4. Расположение:
o	Описание: Проверить расположение подзаголовка относительно заголовка (например, под заголовком по центру, слева).
o	Ожидаемый результат:
	Горизонтальное выравнивание: [Указать выравнивание, например, center, left].
	Вертикальный отступ от заголовка: [Указать отступ, например, 10px].
•	4.5. Отступы:
o	Описание: Проверить отступы подзаголовка от границ формы и других элементов.
o	Ожидаемый результат: [Указать значения отступов, например, 0px слева и справа].
•	4.6. Адаптивность:
o	Описание: Проверить, как подзаголовок отображается на разных разрешениях экрана.
o	Ожидаемый результат:
	Размер шрифта может изменяться пропорционально размеру экрана.
	Расположение подзаголовка остается корректным.
	Подзаголовок может переноситься на новую строку, если это необходимо для адаптации к экрану.





1. Поле Email в форме
Название тест-кейса: Верстка поля Email на странице [Название страницы, например, регистрации или обратной связи]
Цель: Проверить визуальное соответствие поля ввода Email требованиям к верстке (размеры, цвет, шрифт, расположение, placeholder и т.д.).
Предусловия:
•	Открыта страница, содержащая форму с полем Email.
Шаги (разбивка на подпункты для детальной проверки):
•	1. Общие атрибуты:
o	1.1. Определить тип поля ввода (type="email"). Проверить наличие атрибута type и его значение.
	Ожидаемый результат: type="email".
o	1.2. Определить наличие и значение атрибута name.
	Ожидаемый результат: name="email" (или другое осмысленное значение).
o	1.3. Определить наличие и значение атрибута id.
	Ожидаемый результат: id="email" (или другое уникальное значение).
o	1.4. Определить ширину и высоту поля ввода.
	Ожидаемый результат: [Укажите ширину и высоту в пикселях или других единицах, например, 300px, 40px].
o	1.5. Определить наличие и стиль границы (цвет, толщина, стиль).
	Ожидаемый результат: [Укажите цвет, толщину и стиль границы, например, border: 1px solid #ccc;].
o	1.6. Определить цвет фона поля ввода.
	Ожидаемый результат: [Укажите цвет фона, например, background-color: #f9f9f9;].
o	1.7. Определить наличие и радиус скругления углов (если применимо).
	Ожидаемый результат: [Укажите радиус скругления, например, border-radius: 5px; или border-radius: 0px если скругления не требуется].
o	1.8. Проверить адаптивность (как поле отображается при разных разрешениях экрана).
	Ожидаемый результат: Поле масштабируется или изменяет свое расположение в соответствии с адаптивным дизайном.
o	1.9. Проверить, что поле не перекрывается другими элементами страницы.
	Ожидаемый результат: Поле отображается корректно и не перекрывается другими элементами.
•	2. Label (Метка):
o	2.1. Проверить наличие label, связанного с полем ввода (атрибут for).
	Ожидаемый результат: Наличие <label for="email">Email:</label>.
o	2.2. Определить текст label (соответствие требованиям).
	Ожидаемый результат: “Email:” или “Электронная почта:”.
o	2.3. Определить шрифт текста label (название шрифта, размер, цвет, начертание).
	Ожидаемый результат: [Укажите шрифт, размер, цвет и начертание, например, font-family: Arial, sans-serif; font-size: 14px; color: #333; font-weight: normal;].
o	2.4. Определить расположение label относительно поля ввода.
	Ожидаемый результат: Слева или сверху от поля ввода.
•	3. Placeholder:
o	3.1. Определить наличие placeholder (атрибут placeholder).
	Ожидаемый результат: Наличие placeholder="example@email.com".
o	3.2. Определить текст placeholder (соответствие требованиям).
	Ожидаемый результат: “example@email.com” или “Введите ваш email”.
o	3.3. Определить цвет текста placeholder.
	Ожидаемый результат: [Укажите цвет текста, например, color: #999;].
o	3.4. Определить шрифт текста placeholder.
	Ожидаемый результат: [Укажите шрифт текста, например, font-family: Arial, sans-serif; font-size: 14px; font-style: italic;].
•	4. Состояния поля ввода:
o	4.1. Нормальное состояние: Проверить все визуальные параметры поля ввода в нормальном состоянии.
	Ожидаемый результат: [Опишите ожидаемый вид поля в нормальном состоянии, основываясь на предыдущих шагах].
o	4.2. Состояние “hover” (наведение курсора): Проверить изменения визуальных параметров при наведении курсора (изменение цвета границы, тени).
	Ожидаемый результат: [Опишите изменения, если они предусмотрены, например, border-color: #666;].
o	4.3. Состояние “focus” (в фокусе): Проверить, как выглядит поле ввода, когда оно находится в фокусе (например, при нажатии клавиши Tab). Наличие и стиль рамки фокуса.
	Ожидаемый результат: [Опишите вид поля в фокусе, например, outline: 2px solid blue;].
o	4.4. Состояние “disabled” (неактивно): Если поле может быть неактивно, проверить его внешний вид в этом состоянии (цвет фона, прозрачность, текст).
	Ожидаемый результат: [Опишите вид поля в неактивном состоянии, например, background-color: #eee; opacity: 0.5;].
•	5. Введенный текст:
o	5.1. Определить шрифт введенного текста (название шрифта, размер, цвет, начертание).
	Ожидаемый результат: [Укажите шрифт, размер, цвет и начертание, например, font-family: Arial, sans-serif; font-size: 14px; color: #333; font-weight: normal;].
o	5.2. Проверить выравнивание введенного текста (слева, справа, по центру).
	Ожидаемый результат: [Укажите выравнивание, например, text-align: left;].









2. Кнопка “Отправить”
Название тест-кейса: Верстка кнопки “Отправить” на странице [Название страницы, например, регистрации или обратной связи]
Цель: Проверить визуальное соответствие кнопки “Отправить” требованиям к верстке.
Предусловия:
•	Открыта страница, содержащая форму с кнопкой “Отправить”.
Шаги:
•	1. Общие атрибуты:
o	1.1. Определить текст на кнопке (соответствие требованиям).
	Ожидаемый результат: “Отправить”, “Submit”, “Подтвердить” (или другой ожидаемый текст).
o	1.2. Определить тип кнопки (type="submit").
	Ожидаемый результат: type="submit".
o	1.3. Определить шрифт текста на кнопке (название шрифта, размер, цвет, начертание, межбуквенный интервал).
	Ожидаемый результат: [Укажите шрифт, размер, цвет и начертание, например, font-family: Arial, sans-serif; font-size: 16px; color: #fff; font-weight: bold;].
o	1.4. Определить цвет фона кнопки.
	Ожидаемый результат: [Укажите цвет фона, например, background-color: #4CAF50;].
o	1.5. Определить размеры кнопки (ширина, высота, внутренние отступы).
	Ожидаемый результат: [Укажите ширину и высоту, например, width: 150px; height: 40px; padding: 10px;].
o	1.6. Определить форму кнопки (прямоугольник со скругленными углами, эллипс, и т.д.).
	Ожидаемый результат: [Опишите форму кнопки, например, прямоугольник со скругленными углами].
o	1.7. Определить радиус скругления углов (если углы скруглены).
	Ожидаемый результат: [Укажите радиус скругления, например, border-radius: 5px;].
o	1.8. Определить наличие и стиль границы (цвет, толщина, стиль).
	Ожидаемый результат: [Укажите цвет, толщину и стиль границы, например, border: none;].
o	1.9. Определить тень (если есть) (цвет, размытие, смещение).
	Ожидаемый результат: [Опишите тень, например, box-shadow: 2px 2px 5px rgba(0,0,0,0.3);].
o	1.10. Определить курсор при наведении (pointer, default и т.д.).
	Ожидаемый результат: cursor: pointer;.
o	1.11. Определить выравнивание текста внутри кнопки (горизонтальное, вертикальное).
	Ожидаемый результат: text-align: center; vertical-align: middle;.
o	1.12. Проверить адаптивность (как кнопка отображается при разных разрешениях экрана).
	Ожидаемый результат: Кнопка масштабируется или изменяет свое расположение в соответствии с адаптивным дизайном.
o	1.13. Проверить, что кнопка не перекрывается другими элементами страницы.
	Ожидаемый результат: Кнопка отображается корректно и не перекрывается другими элементами.
•	2. Состояния кнопки:
o	2.1. Нормальное состояние: Проверить все визуальные параметры кнопки в нормальном состоянии.
	Ожидаемый результат: [Опишите ожидаемый вид кнопки в нормальном состоянии, основываясь на предыдущих шагах].
o	2.2. Состояние “hover” (наведение курсора): Проверить изменения визуальных параметров при наведении курсора (изменение цвета фона, цвета текста, тени).
	Ожидаемый результат: [Опишите изменения, если они предусмотрены, например, background-color: #3e8e41;].
o	2.3. Состояние “focus” (в фокусе): Проверить, как выглядит кнопка, когда она находится в фокусе (например, при нажатии клавиши Tab). Наличие и стиль рамки фокуса.
	Ожидаемый результат: [Опишите вид кнопки в фокусе, например, outline: 2px solid blue;].
o	2.4. Состояние “disabled” (неактивна): Если кнопка может быть неактивна, проверить ее внешний вид в этом состоянии (цвет фона, прозрачность, текст).
	Ожидаемый результат: [Опишите вид кнопки в неактивном состоянии, например, background-color: #ccc; cursor: not-allowed; opacity: 0.7;].
•	3. Атрибуты доступности (Accessibility):
o	3.1. Проверить, что у кнопки есть понятный текст для скринридеров (атрибут aria-label или текст внутри кнопки).
	Ожидаемый результат: [Укажите текст, который должен быть доступен для скринридеров, например, aria-label=”Отправить форму”].
o	3.2. Проверить, что кнопка доступна для навигации с клавиатуры (можно получить фокус с помощью клавиши Tab).
	Ожидаемый результат: Кнопка может быть выбрана с помощью клавиши Tab.






Напиши пример как должна выглядеть декомпозиция верстки, придумай сценарий и напиши его
1.	Декомпозиция верстки страницы формы 
2.	Поле email в форме и для 4. 13. Кнопка Отправить
